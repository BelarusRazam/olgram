version: '3'

services:
  postgres:
    image: postgres:alpine
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
      - olgram

  redis:
    image: bitnami/redis:latest
    restart: unless-stopped
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./redis-db:/bitnami/redis/data
    env_file:
      - .env
    networks: 
      - olgram

  olgram:
    build: .
    restart: unless-stopped
    env_file:
      - .env
    volumes:
#      - ./olgram-cert:/cert
#      - ./main.py:/app/main.py
#      - ./server/server.py:/app/server/server.py
#      - ./olgram/settings.py:/app/olgram/settings.py
#      - ./olgram/commands/bots.py:/app/olgram/commands/bots.py
    labels:
      - traefik.enable=true
      - traefik.http.routers.olgram.rule=Host(`adminka.mywire.org`)
      - traefik.http.routers.olgram.tls=true
      - traefik.http.routers.olgram.tls.certresolver=le
      - traefik.http.routers.olgram.entrypoints=websecure2
      - traefik.docker.network=traefik
      - traefik.http.services.olgram.loadbalancer.server.port=80
#    ports:
#      - "${WEBHOOK_PORT}:80"
    depends_on:
      - postgres
      - redis
    networks:
      - traefik
      - olgram

networks:
  traefik:
    external: true
  olgram:
